name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
    branches: [main]

jobs:
  bof-build:
    name: Build and publish tagged release
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: OS Packages
        run: |
          sudo apt-get update --fix-missing && sudo apt-get -y install \
          git build-essential zlib1g zlib1g-dev wget zip unzip \
          mingw-w64 binutils-mingw-w64 g++-mingw-w64 gcc-multilib jq

      - name: Minisign
        run: |
          MINISIGN_TMP=`mktemp -d`
          cd $MINISIGN_TMP
          wget https://github.com/aead/minisign/releases/download/v0.2.0/minisign-linux-amd64.tar.gz
          tar xvf minisign-linux-amd64.tar.gz
          mv ./minisign ~/minisign

      - name: Check out code
        uses: actions/checkout@v2

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Build artifacts
        run: |
          cd unhook-bof
          make clean
          make
          mkdir artifacts
          VERSION=$(git describe --tags --abbrev=0)
          cat extension.json | jq ".version |= \"$VERSION\"" > ./artifacts/extension.json
          mv *.o artifacts
          cd artifacts
          tar -czvf ../unhook-bof.tar.gz .

      - name: Sign Package
        run: |
          touch ~/minisign.key && chmod 600 ~/minisign.key
          echo -e "${{ secrets.MINISIGN_PRIVATE_KEY }}" > ~/minisign.key
          MANIFEST=$(cat ./artifacts/extension.json | base64 -w 0)
          bash -c "echo \"\" | ~/minisign -s ~/minisign.key -S -m ./unhook-bof.tar.gz -t \"$MANIFEST\" -x unhook-bof.minisig"

      - name: "Publish Release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ./unhook-bof.tar.gz
            ./unhook-bof.minisig